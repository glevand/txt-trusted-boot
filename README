***************************************************************************
* The current version of tboot (both in the repository and .tar.gz        *
* requires the updated SINIT AC module (Q35/X38_SINIT_16.BIN).            *
* It will not work with previous SINIT ACMs nor will it work on the TEP   *
***************************************************************************

Trusted Boot (tboot) is an open source, pre- kernel/VMM module that uses
Intel(R) Trusted Execution Technology (Intel(R) TXT) to perform a measured
and verified launch of an OS kernel/VMM.

This version of tboot supports Intel and OEM systems that are Intel TXT
-capable as well as the Intel TXT Technology Enabling Platform (TEP).
It also supports Intel Software Development Platforms (SDPs) that are
TXT-capable.

This version of tboot only supports both the Xen virtual machine monitor
(versions >= 3.2) and Linux kernel versions >= 2.6.20.

The mercurial source code repository for this project is located at:
http://www.bughost.org/repos.hg/tboot.hg.


Overview of Tboot Functionality:
--------------------------------
o  Measured Launch.  If the processor is detected as being TXT-capable
   and enabled then the code will attempt to perform a measured launch.  If
   the measured launch process fails (processor is not capable, TXT is not
   enabled, missing SINIT, corrupted data, etc.)) then it will fall-through
   to a non-TXT boot.

o  Teardown of measured environment.  When the system is shutdown, the
   measured environment will be torn down properly.  This support S3/S4/S5
   sleep states.

o  Reset data protection.  Intel TXT hardware prevents access to secrets
   if the system is reset without clearing them from memory (as part of a
   TXT teardown).  This code will support this by setting the flag indicating
   that memory should be so protected during the measured launch and clearing
   the flag just before teardown.

o  Protection of TXT memory ranges.  Intel TXT reserves certain regions of
   RAM for its use and also defines several MMIO regions.  These regions
   (excluding the TXT public configuration space) are protected from use by
   any domains (including dom0).

o  Intel TXT Launch Control Policy (LCP) tools.  The lcptools project
   contains a set of tools (and basic documentation) that can be used to
   create and provision TXT Launch Control policies.  LCP uses TPM
   non-volatile storage (TPM NV) to hold a launch policy, which the SINIT AC
   module reads and uses to enforce which measured launched environments
   (MLEs) (e.g. tboot) can be launched (based on a SHA-1 hash).  These
   tools require a TPM Software Stack (TSS) that supports the Tspi_NV_* API.
   Versions of the TrouSerS project >0.3.0 support them.

o  Verified Launch.  Tboot will extend verifcation from the MLE to the VMM
   and dom0, using policies similar to the LCP and also stored in TPM NV.
   These policies can be created and managed by the tb_polgen tool and
   provisioned into TPM NV using the lcptools.


Instructions for Use:
---------------------
o  The new tboot module must be added as the 'kernel' in the grub.conf file.
   The existing 'kernel' entry should follow as a 'module'.  The SINIT AC
   module (available with systems that support TXT) must be added to the
   grub.conf boot config as the last module, e.g.:
       title Xen w/ Intel(R) Trusted Execution Technology
           root (hd0,1)
           kernel /tboot.gz
           module /xen.gz iommu=required dom0_mem=524288 com1=115200,8n1
           module /vmlinuz-2.6.18-xen root=/dev/VolGroup00/LogVol00 ro
           module /initrd-2.6.18-xen.img
           module /BRLK_SINIT_20070910_release.BIN

o  For Xen:  newer versions of Xen support the 'iommu=required' command line
   option, which causes Xen to fail to run if there is any error in
   programming the VT-d engines.  This is the most secure configuration.
   Older versions of Xen used the param 'vtd=1' which enables VT-d but does
   not fail if it cannot be enabled.

o  For Linux:  the 'iommu=1' command line option will enabled VT-d.  There is
   currently no way to force its use, but this will be added later.  The Linux
   kernel patches can be found on the LKML archives at:
       http://lkml.org/lkml/2008/10/7/424
       http://lkml.org/lkml/2008/10/7/427
       http://lkml.org/lkml/2008/10/7/429
       http://lkml.org/lkml/2008/10/7/442
       http://lkml.org/lkml/2008/10/7/445

o  Progress of the launch process is indicated via debug printk's to
   COM1 (hardcoded).  These appear before the normal "(XEN)" output and are
   prefixed by "TBOOT:".  Though tboot does initialize the COM port, it is
   best if this is also done by GRUB - grub.conf should have:
       serial --speed=115200 --unit=0
       terminal console serial

o  tboot will attempt to seal the module measurements using the TPM so that if
   it is put into S3 it can restore the correct PCR values on resume.  In order
   for this to work, the TPM must be owned and the SRK auth must be set to all
   0s.  This can be done usign the '-z' flag to tpm_takeownership.  If the
   tboot policy being used is 'nonfatal' and the seal operation fails, tboot
   will continue the boot.  However, for 'continue' or 'halt' policy types,
   tboot will halt the boot.


Interesting Items of Note:
--------------------------
o  A Xen or Linux version that does not support tboot can still be launched by
   tboot, however it will not protect any of the TXT memory nor tboot itself.
   And it will hang on reboot/shutdown.  Aside from this, it will behave
   normally.

o  Tboot will copy and alter the e820 table provided by GRUB to "reserve"
   its own memory plus the TXT memory regions.  These are marked as
   E820_UNUSABLE so that the patched Xen code can prevent them from
   being assigned to dom0.  The e820 table is not altered if the measured
   launch fails for any reason.

o  Tboot is always built 32bit and runs in protected mode without PAE or
   paging enabled.  Tboot loads and executes at 0x1003000 (16MB).

o  The code requires that VT be enabled as well as TXT.  This is because
   the mechanism for bringing up the APs uses VMX to create a mini-VM in
   order to trap on INIT-SIPI-SIPI.

o  Support for the TEP's NoDMA capability has not been implemented in this
   patch.  NoDMA has been superseded by VT-d and is used by default on the
   new TXT platforms.

o  The tools/txt-stat project is a Linux application that reads some of
   the TXT registers will display the tboot boot log (if tboot was built with
   MEM_LOGGING defined), in case a system does not have serial support.
